{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Profile","avatar","name","tag","location","stats","className","src","alt","followers","views","likes","defaultProps","Statistics","title","map","item","style","backgroundColor","Math","random","toString","slice","label","percentage","id","FriendList","friends","friend","isOnline","FriendListItem","width","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"s1GAIMA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,MAAhC,OACd,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKN,EAAQO,IAAI,gHAAsBF,UAAU,WACtD,mBAAGA,UAAU,OAAb,SAAqBJ,IACrB,mBAAGI,UAAU,MAAb,SAAoBH,IACpB,mBAAGG,UAAU,WAAb,SAAyBF,OAG3B,qBAAIE,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMI,eAEpC,+BACE,sBAAMH,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMK,WAEpC,+BACE,sBAAMJ,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMM,kBAM3BX,IAEfA,EAAQY,aAAe,CACrBX,OAAQ,kE,WC7BJY,G,MAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOT,EAAV,EAAUA,MAAV,OACjB,0BAASC,UAAU,aAAnB,UACGQ,GAAS,oBAAIR,UAAU,QAAd,SAAuBQ,IAEjC,oBAAIR,UAAU,YAAd,SACGD,EAAMU,KAAI,SAAAC,GAAI,OACb,qBACEV,UAAU,OACVW,MAAO,CACLC,gBAAiB,IAAMC,KAAKC,SAASC,SAAS,IAAIC,MAAM,EAAG,IAH/D,UAOE,sBAAMhB,UAAU,QAAhB,SAAyBU,EAAKO,QAC9B,sBAAMjB,UAAU,aAAhB,SAA8BU,EAAKQ,eAH9BR,EAAKS,cAUpBZ,EAAWD,aAAe,CACxBE,MAAO,IAcMD,Q,OChBAa,G,MApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAIrB,UAAU,aAAd,SACGqB,EAAQZ,KAAI,SAAAa,GAAM,OACjB,oBAAItB,UAAU,OAAd,SACE,cAAC,EAAD,CACEL,OAAQ2B,EAAO3B,OACfC,KAAM0B,EAAO1B,KACb2B,SAAUD,EAAOC,YAJKD,EAAOH,WAmBjCK,EAAiB,SAAC,GAAD,IAAG7B,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAM2B,EAAjB,EAAiBA,SAAjB,OACrB,gCACGA,EACC,sBAAMvB,UAAU,oBAEhB,sBAAMA,UAAU,qBAElB,qBAAKA,UAAU,SAASC,IAAKN,EAAQO,IAAI,GAAGuB,MAAM,OAClD,mBAAGzB,UAAU,OAAb,SAAqBJ,Q,OCNV8B,G,MAxBY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,qBAAK3B,UAAU,sBAAf,SACE,wBAAOA,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACG2B,EAAMlB,KAAI,SAAAC,GAAI,OACb,+BACE,6BAAKA,EAAKkB,OACV,6BAAKlB,EAAKmB,SACV,6BAAKnB,EAAKoB,aAHHpB,EAAKS,gB,OCUTY,EAlBH,WACV,OACE,gCACE,cAAC,EAAD,CACEpC,OAAQqC,EAAKrC,OACbC,KAAMoC,EAAKpC,KACXC,IAAKmC,EAAKnC,IACVC,SAAUkC,EAAKlC,SACfC,MAAOiC,EAAKjC,QAGd,cAAC,EAAD,CAAYA,MAAOkC,IAEnB,cAAC,EAAD,CAAYZ,QAASA,IACrB,cAAC,EAAD,CAAoBM,MAAOO,Q,MCnBjCC,IAASC,OAAOL,IAAOM,SAASC,eAAe,W","file":"static/js/main.6d448aae.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Profile.css';\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => (\r\n  <div className=\"profile\">\r\n    <div className=\"description\">\r\n      <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n\r\n    <ul className=\"stats\">\r\n      <li>\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Profile;\r\n\r\nProfile.defaultProps = {\r\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg',\r\n};\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className=\"statistics\">\r\n    {title && <h2 className=\"title\">{title}</h2>}\r\n\r\n    <ul className=\"stat-list\">\r\n      {stats.map(item => (\r\n        <li\r\n          className=\"item\"\r\n          style={{\r\n            backgroundColor: '#' + Math.random().toString(16).slice(3, 9),\r\n          }}\r\n          key={item.id}\r\n        >\r\n          <span className=\"label\">{item.label}</span>\r\n          <span className=\"percentage\">{item.percentage}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FriendList.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className=\"friendList\">\r\n    {friends.map(friend => (\r\n      <li className=\"item\" key={friend.id}>\r\n        <FriendListItem\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ),\r\n};\r\nexport default FriendList;\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  <div>\r\n    {isOnline ? (\r\n      <span className=\"status isOnline\"></span>\r\n    ) : (\r\n      <span className=\"status isOffline\"></span>\r\n    )}\r\n    <img className=\"avatar\" src={avatar} alt=\"\" width=\"48\" />\r\n    <p className=\"name\">{name}</p>\r\n  </div>\r\n);\r\nFriendListItem.propTypes = {\r\n  isOnline: PropTypes.bool.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TransactionHistory.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <div className=\"transaction-history\">\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nexport default TransactionHistory;\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import Profile from './components/Profile/Profile';\r\nimport user from './jsonData/user.json';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport statisticalData from './jsonData/statistical-data.json';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport friends from './jsonData/friends.json';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\nimport transactions from './jsonData/transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Profile\r\n        avatar={user.avatar}\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        stats={user.stats}\r\n      />\r\n\r\n      <Statistics stats={statisticalData} />\r\n\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(App(), document.getElementById('root'));\n"],"sourceRoot":""}